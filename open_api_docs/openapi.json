{"openapi":"3.1.0","info":{"title":"Aparavi Web Services","version":"0.1.0"},"paths":{"/version":{"get":{"summary":"Version","description":"Version Endpoint.\n\nReturns the version of the cloud Engine.\n\nReturns:\n    Result: The version string.","operationId":"version_version_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Result"}}}}}}},"/status":{"get":{"summary":"Status","description":"Compute the server status.","operationId":"status_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Result"}}}}}}},"/pipe":{"delete":{"summary":"Pipe Delete","description":"Delete an existing processing pipeline.\n\nArgs:\n    token (str): The token given when the pipe was created.\n    authorization (str): The API key for authentication, provided in the Authorization header.\n\nReturns:\n    ResultBase: A standardized response indicating success or failure.\n\nBehavior:\n    - Validates the API key.\n    - Constructs a unique identifier (`pipeKey`) using the API key and pipeline name.\n    - Checks if the pipeline exists; if not, returns an error response.\n    - Stops and removes the pipeline's associated loader.\n    - Deletes the pipeline from the global `pipes` dictionary.\n    - Returns a success response upon successful deletion.\n\nExample Request:\n    >>> DELETE /pipe_process?pipe=dataPipeline\n    Headers:\n        Authorization: Bearer abc123\n\nExample Response (Success):\n    {\n        \"status\": \"OK\"\n    }\n\nExample Response (Failure - Nonexistent Pipe):\n    {\n        \"status\": \"Error\",\n        \"error\": {\n            \"message\": \"Pipe dataPipeline does not exist\"\n        }\n    }","operationId":"pipe_Delete_pipe_delete","parameters":[{"name":"token","in":"query","required":false,"schema":{"type":"string","description":"The token of the pipeline to delete","title":"Token"},"description":"The token of the pipeline to delete"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key in the Authorization header","title":"Authorization"},"description":"Bearer API key in the Authorization header"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"summary":"Pipe Create","description":"Create a new processing pipeline.\n\nArgs:\n    pipeline (Dict[str, Any]): The configuration for the new pipeline.\n    pipe (str): The name of the pipeline to create, provided as a query parameter.\n    authorization (str): The API key for authentication, provided in the Authorization header.\n\nReturns:\n    ResultBase: A standardized response indicating success or failure.\n\nBehavior:\n    - Validates the API key.\n    - Constructs a unique identifier (`pipeKey`) using the API key and pipeline name.\n    - Checks if the pipeline already exists; if so, returns an error response.\n    - Instantiates an `ILoader` and initializes it with the pipeline configuration.\n    - Stores the pipeline control information in the global `pipes` dictionary.\n    - Returns a success response upon successful creation.\n\nExample Request:\n    >>> PUT /pipe?pipe=dataPipeline\n    Headers:\n        Authorization: Bearer abc123\n    Body:\n        {\n            \"source\": \"s3://bucket/data\",\n            \"transformations\": [\"filter\", \"aggregate\"]\n        }\n\nExample Response (Success):\n    {\n        \"status\": \"OK\"\n        \"data\": {\n            \"token\": \"xyz\"\n        }\n    }\n\nExample Response (Failure - Existing Pipe):\n    {\n        \"status\": \"Error\",\n        \"error\": {\n            \"message\": \"Pipe dataPipeline already exists\"\n        }\n    }","operationId":"pipe_Create_pipe_post","parameters":[{"name":"name","in":"query","required":false,"schema":{"type":"string","description":"Optional name associated with the pipeline","title":"Name"},"description":"Optional name associated with the pipeline"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key in the Authorization header","title":"Authorization"},"description":"Bearer API key in the Authorization header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Pipeline"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipe/process":{"put":{"summary":"Pipe Process","description":"Upload data to process.\n\nUses\n    Content-Type: multipart/form-data\n    Body: [files to upload]","operationId":"pipe_Process_pipe_process_put","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"The token returned from pipe creation","title":"Token"},"description":"The token returned from pipe creation"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key in the Authorization header","title":"Authorization"},"description":"Bearer API key in the Authorization header"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipe/validate":{"post":{"summary":"Pipe Validate","description":"Validate a processing pipeline configuration.\n\nArgs:\n    pipeline (Dict[str, Any]): The configuration for the pipeline to validate.\n    authorization (str): The API key for authentication, provided in the Authorization header.\n\nReturns:\n    ResultBase: A standardized response indicating success or failure.","operationId":"pipe_Validate_pipe_validate_post","parameters":[{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key in the Authorization header","title":"Authorization"},"description":"Bearer API key in the Authorization header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Pipeline"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/task":{"put":{"summary":"Task Execute","description":"Execute a task.\n\nArgs:\n    pipeline (Dict[str, Any]): The configuration for the new pipeline.\n    authorization (str): The API key for authentication, provided in the Authorization header.\n\nReturns:\n    ResultBase: A standardized response indicating success or failure.\n\nBehavior:\n    - Validates the API key.\n    - Constructs a unique identifier (`pipeKey`) using the API key and pipeline name.\n    - Checks if the pipeline already exists; if so, returns an error response.\n    - Instantiates an `ILoader` and initializes it with the pipeline configuration.\n    - Stores the pipeline control information in the global `pipes` dictionary.\n    - Returns a success response upon successful creation.\n\nExample Request:\n    >>> PUT / task\n    Headers:\n        Authorization: Bearer abc123\n    Body:\n        {\n            \"source\": \"s3://bucket/data\",\n            \"transformations\": [\"filter\", \"aggregate\"]\n        }\n\nExample Response (Success):\n    {\n        \"status\": \"OK\",\n        \"data\": {\n            \"token\": \"xyz\"\n        }\n    }\n\nExample Response (Failure):\n    {\n        \"status\": \"Error\",\n        \"error\": {\n            \"message\": \"Could not execute task\"\n        }\n    }","operationId":"task_Execute_task_put","parameters":[{"name":"name","in":"query","required":false,"schema":{"type":"string","description":"Optional name associated with the pipeline","title":"Name"},"description":"Optional name associated with the pipeline"},{"name":"threads","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","maximum":16,"minimum":1},{"type":"null"}],"description":"Optional number of threads to use (1–16)","title":"Threads"},"description":"Optional number of threads to use (1–16)"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key in the Authorization header","title":"Authorization"},"description":"Bearer API key in the Authorization header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Pipeline"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"summary":"Task Status","description":"Get the status of a task.\n\nArgs:\n    token (str): The task token received from task_Execute.\n    authorization (str): API key for authentication.\n\nReturns:\n    ResultBase: A response containing the task's current status.","operationId":"task_Status_task_get","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Token returned from task execute","title":"Token"},"description":"Token returned from task execute"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key","title":"Authorization"},"description":"Bearer API key"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"summary":"Task Cancel","description":"Cancel a task.\n\nArgs:\n    token (str): The task token received from task_Execute.\n    authorization (str): API key for authentication.","operationId":"task_Cancel_task_delete","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Token returned from task execute","title":"Token"},"description":"Token returned from task execute"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key","title":"Authorization"},"description":"Bearer API key"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultBase"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/webhook":{"put":{"summary":"Task Webhook","description":"Proxy a webhook request to the loaded task engine.","operationId":"task_Webhook_webhook_put","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Token returned from task execute","title":"Token"},"description":"Token returned from task execute"},{"name":"authorization","in":"header","required":true,"schema":{"type":"string","description":"Bearer API key","title":"Authorization"},"description":"Bearer API key"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chat":{"get":{"summary":"Task Chat","description":"Set cookies for chat session and redirect to the /chat/pages UI.\n\nThis endpoint stores important session parameters in cookies\nfor the chat interface to access later, and then redirects\nthe client to the /chat/pages route to begin the chat UI.\n\nParameters:\n- type: A required query parameter indicating the chat pool type.\n- apikey: A required query parameter representing the API key for authorization.\n- token: A required query parameter identifying the active chat session.\n\nReturns:\n- A RedirectResponse to /chat/pages with cookies set for 'type', 'apikey', and 'token'.","operationId":"task_Chat_chat_get","parameters":[{"name":"type","in":"query","required":true,"schema":{"type":"string","description":"Type of pipeline","title":"Type"},"description":"Type of pipeline"},{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Token returned from task execute","title":"Token"},"description":"Token returned from task execute"},{"name":"apikey","in":"query","required":true,"schema":{"type":"string","description":"Bearer API key","title":"Apikey"},"description":"Bearer API key"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/dropper":{"get":{"summary":"Task Dropper","description":"Set cookies for chat session and redirect to the /chat/pages UI.\n\nThis endpoint stores important session parameters in cookies\nfor the chat interface to access later, and then redirects\nthe client to the /chat/pages route to begin the chat UI.\n\nParameters:\n- type: A required query parameter indicating the chat pool type.\n- apikey: A required query parameter representing the API key for authorization.\n- token: A required query parameter identifying the active chat session.\n\nReturns:\n- A RedirectResponse to /chat/pages with cookies set for 'type', 'apikey', and 'token'.","operationId":"task_Dropper_dropper_get","parameters":[{"name":"type","in":"query","required":true,"schema":{"type":"string","description":"Type of pipeline","title":"Type"},"description":"Type of pipeline"},{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Token returned from task execute","title":"Token"},"description":"Token returned from task execute"},{"name":"apikey","in":"query","required":true,"schema":{"type":"string","description":"Bearer API key","title":"Apikey"},"description":"Bearer API key"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/services":{"get":{"summary":"Services Get","description":"Asynchronously retrieves service information.\n\nArgs:\n    service (str, optional): The name of a specific service to retrieve.\n\nReturns:\n    Result: A response object containing the parsed JSON output or an error message.","operationId":"services_get_services_get","parameters":[{"name":"service","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Service"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Result"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Result":{"properties":{"status":{"type":"string","enum":["OK","Error"],"title":"Status"},"data":{"type":"null","title":"Data"},"error":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Error"},"metrics":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Metrics"}},"type":"object","required":["status"],"title":"Result","description":"A generic result with no data."},"ResultBase":{"properties":{"status":{"type":"string","enum":["OK","Error"],"title":"Status"},"data":{"anyOf":[{},{"type":"null"}],"title":"Data"},"error":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Error"},"metrics":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Metrics"}},"type":"object","required":["status"],"title":"ResultBase","description":"Base class for API responses with a standardized format.\n\n- `status`: Always present, indicates if the response is \"OK\" or \"Error\".\n- `data`: Optional, contains the successful response data.\n- `error`: Optional, contains error details when `status` is \"Error\"."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}